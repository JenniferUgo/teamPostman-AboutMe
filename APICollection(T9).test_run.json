{
	"id": "5241870b-530d-462e-a919-75c5d44751d8",
	"name": "APICollection(T9)",
	"timestamp": "2022-11-24T16:26:32.242Z",
	"collection_id": "23154523-34907bc4-5467-4c24-bac2-fc081b2f5a73",
	"folder_id": 0,
	"environment_id": "23154523-0f0b37fc-543b-4631-8d87-f6ff4a196e22",
	"totalPass": 62,
	"totalFail": 0,
	"results": [
		{
			"id": "46497d77-575b-4cc7-b4c0-0227c4f824f2",
			"name": "Get All To Do Entries",
			"url": "https://demo.fusio-project.org/index.php/todo",
			"time": 1791,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				1791
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "0ddea42f-806b-4b73-82c7-fc1da585043f",
			"name": "Get All Entries",
			"url": "https://demo.fusio-project.org/index.php/",
			"time": 429,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code should be 200": true,
				"Status code name should have an OK string": true,
				"The apiVersion should be 6.3.8.0": true,
				"The title should be Fusio": true,
				"The paymentCurrency should be EUR": true,
				"Body matches the categories string": true,
				"The body matches the scopes string": true
			},
			"testPassFailCounts": {
				"Status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have an OK string": {
					"pass": 1,
					"fail": 0
				},
				"The apiVersion should be 6.3.8.0": {
					"pass": 1,
					"fail": 0
				},
				"The title should be Fusio": {
					"pass": 1,
					"fail": 0
				},
				"The paymentCurrency should be EUR": {
					"pass": 1,
					"fail": 0
				},
				"Body matches the categories string": {
					"pass": 1,
					"fail": 0
				},
				"The body matches the scopes string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				429
			],
			"allTests": [
				{
					"Status code should be 200": true,
					"Status code name should have an OK string": true,
					"The apiVersion should be 6.3.8.0": true,
					"The title should be Fusio": true,
					"The paymentCurrency should be EUR": true,
					"Body matches the categories string": true,
					"The body matches the scopes string": true
				}
			]
		},
		{
			"id": "1e951215-9af3-46d8-8515-e5b00f155974",
			"name": "Get entry per ID",
			"url": "https://demo.fusio-project.org/todo/?todo_id=2",
			"time": 269,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				269
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "e84c5e7e-cd56-4183-8c57-f153c8ed6769",
			"name": "Get Books",
			"url": "https://simple-books-api.glitch.me/books?type=fiction",
			"time": 294,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code should be 200": true,
				"Status code name should have an OK string": true,
				"Body matches true string": true,
				"Body matches The Vanishing Half": true,
				"Body matches The Midnight Library": true,
				"Body matches Viscount Who Loved Me": true,
				"Second response name should be The Vanishing Half": true,
				"Third response name should be The Midnight Library": true,
				"Fourth response name should be Viscount Who Loved Me": true,
				"The id number of a fiction book that is available with the name The Midnight Library is 4": true
			},
			"testPassFailCounts": {
				"Status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have an OK string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches true string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches The Vanishing Half": {
					"pass": 1,
					"fail": 0
				},
				"Body matches The Midnight Library": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Viscount Who Loved Me": {
					"pass": 1,
					"fail": 0
				},
				"Second response name should be The Vanishing Half": {
					"pass": 1,
					"fail": 0
				},
				"Third response name should be The Midnight Library": {
					"pass": 1,
					"fail": 0
				},
				"Fourth response name should be Viscount Who Loved Me": {
					"pass": 1,
					"fail": 0
				},
				"The id number of a fiction book that is available with the name The Midnight Library is 4": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				294
			],
			"allTests": [
				{
					"Status code should be 200": true,
					"Status code name should have an OK string": true,
					"Body matches true string": true,
					"Body matches The Vanishing Half": true,
					"Body matches The Midnight Library": true,
					"Body matches Viscount Who Loved Me": true,
					"Second response name should be The Vanishing Half": true,
					"Third response name should be The Midnight Library": true,
					"Fourth response name should be Viscount Who Loved Me": true,
					"The id number of a fiction book that is available with the name The Midnight Library is 4": true
				}
			]
		},
		{
			"id": "e30f26c2-790f-47e6-badb-405e3db26ce8",
			"name": "Get a Valid Book",
			"url": "https://simple-books-api.glitch.me/books?type=fiction",
			"time": 1019,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code should be 200": true,
				"Status code name should have an OK string": true,
				"Body matches true string": true,
				"Body matches The Vanishing Half": true,
				"Body matches The Midnight Library": true,
				"Body matches Viscount Who Loved Me": true,
				"Second response name should be The Vanishing Half": true,
				"Third response name should be The Midnight Library": true,
				"Fourth response name should be Viscount Who Loved Me": true,
				"The id number of a fiction book that is available with the name The Midnight Library is 4": true
			},
			"testPassFailCounts": {
				"Status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have an OK string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches true string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches The Vanishing Half": {
					"pass": 1,
					"fail": 0
				},
				"Body matches The Midnight Library": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Viscount Who Loved Me": {
					"pass": 1,
					"fail": 0
				},
				"Second response name should be The Vanishing Half": {
					"pass": 1,
					"fail": 0
				},
				"Third response name should be The Midnight Library": {
					"pass": 1,
					"fail": 0
				},
				"Fourth response name should be Viscount Who Loved Me": {
					"pass": 1,
					"fail": 0
				},
				"The id number of a fiction book that is available with the name The Midnight Library is 4": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1019
			],
			"allTests": [
				{
					"Status code should be 200": true,
					"Status code name should have an OK string": true,
					"Body matches true string": true,
					"Body matches The Vanishing Half": true,
					"Body matches The Midnight Library": true,
					"Body matches Viscount Who Loved Me": true,
					"Second response name should be The Vanishing Half": true,
					"Third response name should be The Midnight Library": true,
					"Fourth response name should be Viscount Who Loved Me": true,
					"The id number of a fiction book that is available with the name The Midnight Library is 4": true
				}
			]
		},
		{
			"id": "2444aad4-b65d-46c6-9222-e75e2215eb67",
			"name": "Place a book order",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 1498,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code should be 201": true,
				"Status code name should have a Created string": true,
				"created should be true": true,
				"Body matches orderId string": true,
				"Body matches created string": true
			},
			"testPassFailCounts": {
				"Status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have a Created string": {
					"pass": 1,
					"fail": 0
				},
				"created should be true": {
					"pass": 1,
					"fail": 0
				},
				"Body matches orderId string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches created string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1498
			],
			"allTests": [
				{
					"Status code should be 201": true,
					"Status code name should have a Created string": true,
					"created should be true": true,
					"Body matches orderId string": true,
					"Body matches created string": true
				}
			]
		},
		{
			"id": "827a40af-e729-46b7-9c9e-9485091519fb",
			"name": "Place a book order",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 2130,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code should be 201": true,
				"Status code name should have a Created string": true,
				"created should be true": true,
				"Body matches orderId string": true,
				"Body matches created string": true
			},
			"testPassFailCounts": {
				"Status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have a Created string": {
					"pass": 1,
					"fail": 0
				},
				"created should be true": {
					"pass": 1,
					"fail": 0
				},
				"Body matches orderId string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches created string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2130
			],
			"allTests": [
				{
					"Status code should be 201": true,
					"Status code name should have a Created string": true,
					"created should be true": true,
					"Body matches orderId string": true,
					"Body matches created string": true
				}
			]
		},
		{
			"id": "9aef3b9a-6547-4601-861d-93bb01996b54",
			"name": "Place a book order",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 1256,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code should be 201": true,
				"Status code name should have a Created string": true,
				"created should be true": true,
				"Body matches orderId string": true,
				"Body matches created string": true
			},
			"testPassFailCounts": {
				"Status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have a Created string": {
					"pass": 1,
					"fail": 0
				},
				"created should be true": {
					"pass": 1,
					"fail": 0
				},
				"Body matches orderId string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches created string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1256
			],
			"allTests": [
				{
					"Status code should be 201": true,
					"Status code name should have a Created string": true,
					"created should be true": true,
					"Body matches orderId string": true,
					"Body matches created string": true
				}
			]
		},
		{
			"id": "249de6ec-3def-4ae5-8bb1-23fc1c4ccc5a",
			"name": "Get all orders",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 1119,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code should be 200": true,
				"Status code name should have an OK string": true,
				"Body matches John string": true,
				"Body matches Michael string": true,
				"Body matches bookId string": true,
				"Body matches id": true,
				"The first response customerName should be John": true,
				"The second response customerName should be Michael": true,
				"The second response customerName should be Jennifer": true,
				"The third response bookId should be 3": true
			},
			"testPassFailCounts": {
				"Status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have an OK string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches John string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches Michael string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches bookId string": {
					"pass": 1,
					"fail": 0
				},
				"Body matches id": {
					"pass": 1,
					"fail": 0
				},
				"The first response customerName should be John": {
					"pass": 1,
					"fail": 0
				},
				"The second response customerName should be Michael": {
					"pass": 1,
					"fail": 0
				},
				"The second response customerName should be Jennifer": {
					"pass": 1,
					"fail": 0
				},
				"The third response bookId should be 3": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1119
			],
			"allTests": [
				{
					"Status code should be 200": true,
					"Status code name should have an OK string": true,
					"Body matches John string": true,
					"Body matches Michael string": true,
					"Body matches bookId string": true,
					"Body matches id": true,
					"The first response customerName should be John": true,
					"The second response customerName should be Michael": true,
					"The second response customerName should be Jennifer": true,
					"The third response bookId should be 3": true
				}
			]
		},
		{
			"id": "93dd8adb-40a7-4fda-ab54-ae0d7dfa921f",
			"name": "Get an order",
			"url": "https://simple-books-api.glitch.me/orders/Wc9Pz46GdQisoAO_o1V-7",
			"time": 418,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code should be 200": true,
				"Status code name should have an OK string": true,
				"bookId should be 3": true,
				"customerName should be John": true
			},
			"testPassFailCounts": {
				"Status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have an OK string": {
					"pass": 1,
					"fail": 0
				},
				"bookId should be 3": {
					"pass": 1,
					"fail": 0
				},
				"customerName should be John": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				418
			],
			"allTests": [
				{
					"Status code should be 200": true,
					"Status code name should have an OK string": true,
					"bookId should be 3": true,
					"customerName should be John": true
				}
			]
		},
		{
			"id": "3e92f422-ef46-48d2-96fb-def2049f83f3",
			"name": "Delete an order",
			"url": "https://simple-books-api.glitch.me/orders/%7B%7BorderIdTwo%7D%7D?created=true",
			"time": 3325,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code should be 404": true,
				"Status code name should have a Not Found string": true
			},
			"testPassFailCounts": {
				"Status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"Status code name should have a Not Found string": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3325
			],
			"allTests": [
				{
					"Status code should be 404": true,
					"Status code name should have a Not Found string": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 13548,
	"collection": {
		"requests": [
			{
				"id": "46497d77-575b-4cc7-b4c0-0227c4f824f2",
				"method": "GET"
			},
			{
				"id": "0ddea42f-806b-4b73-82c7-fc1da585043f",
				"method": "GET"
			},
			{
				"id": "1e951215-9af3-46d8-8515-e5b00f155974",
				"method": "GET"
			},
			{
				"id": "e84c5e7e-cd56-4183-8c57-f153c8ed6769",
				"method": "GET"
			},
			{
				"id": "e30f26c2-790f-47e6-badb-405e3db26ce8",
				"method": "GET"
			},
			{
				"id": "2444aad4-b65d-46c6-9222-e75e2215eb67",
				"method": "POST"
			},
			{
				"id": "827a40af-e729-46b7-9c9e-9485091519fb",
				"method": "POST"
			},
			{
				"id": "9aef3b9a-6547-4601-861d-93bb01996b54",
				"method": "POST"
			},
			{
				"id": "249de6ec-3def-4ae5-8bb1-23fc1c4ccc5a",
				"method": "GET"
			},
			{
				"id": "93dd8adb-40a7-4fda-ab54-ae0d7dfa921f",
				"method": "GET"
			},
			{
				"id": "3e92f422-ef46-48d2-96fb-def2049f83f3",
				"method": "DELETE"
			}
		]
	}
}